name: Deploy Existing Build

on:
  workflow_dispatch:
    inputs:
      build_number:
        description: "Enter build number (from Actions tab, e.g., 157)"
        required: true
        default: "latest"
      environment:
        description: "Choose environment to deploy (sit, qa, uat, all)"
        required: true
        default: "sit"
        type: choice
        options:
          - sit
          - qa
          - uat
          - all
      mode:
        description: "Deployment mode"
        required: true
        default: "single"
        type: choice
        options:
          - single
          - partial

jobs:
  set-build-list:
    runs-on: ubuntu-latest
    outputs:
      list: ${{ steps.output-list.outputs.list }}
    steps:
      - id: output-list
        shell: bash
        run: |
          MODE="${{ github.event.inputs.mode }}"
          ENV="${{ github.event.inputs.environment }}"
          ORDER=("sit" "qa" "uat")
          BUILD_LIST=()
          if [ "$MODE" = "single" ]; then
            BUILD_LIST=("$ENV")
          elif [ "$MODE" = "partial" ]; then
            for e in "${ORDER[@]}"; do
              BUILD_LIST+=("$e")
              [ "$e" = "$ENV" ] && break
            done
          else
            BUILD_LIST=("${ORDER[@]}")
          fi
          echo "Environments to deploy: ${BUILD_LIST[@]}"
          echo "list=${BUILD_LIST[*]}" >> $GITHUB_OUTPUT

  deploy-sit:
    runs-on: windows-latest
    
    if: ${{ contains(needs.build.outputs.build-list, 'sit') }}
    steps:
      - name: Download SIT artifact
        uses: actions/download-artifact@v4
        with:
          name: app-sit-${{ github.event.inputs.build_number }}
          path: ./publish-sit

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to SIT
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'aviapp-sit'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_SIT }}
          package: ./publish-sit

  deploy-qa:
    runs-on: windows-latest
    needs: deploy-sit
    if: |
      always() &&
      contains(needs.build.outputs.build-list, 'qa') &&
      (
        !contains(needs.build.outputs.build-list, 'sit') || 
        (contains(needs.build.outputs.build-list, 'sit') && needs.deploy-sit.result == 'success')
      )
    steps:
      - name: Download QA artifact
        uses: actions/download-artifact@v4
        with:
          name: app-qa-${{ github.event.inputs.build_number }}
          path: ./publish-qa

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to QA
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'aviapp-qa'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_QA }}
          package: ./publish-qa

  deploy-uat:
    runs-on: windows-latest
    needs: deploy-qa
    if: |
      always() &&
      contains(needs.build.outputs.build-list, 'uat') &&
      (
        !contains(needs.build.outputs.build-list, 'qa') || 
        (contains(needs.build.outputs.build-list, 'qa') && needs.deploy-qa.result == 'success')
      )
    steps:
      - name: Download UAT artifact
        uses: actions/download-artifact@v4
        with:
          name: app-uat-${{ github.event.inputs.build_number }}
          path: ./publish-uat

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to UAT
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'aviapp-uat'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_UAT }}
          package: ./publish-uat
  
