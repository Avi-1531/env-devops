name: Deploy Existing Build

on:
  workflow_dispatch:
    inputs:
      build_number:
        description: "Enter build number (from Actions tab, e.g., 157)"
        required: true
        default: "latest"
      environment:
        description: "Choose environment to deploy (sit, qa, uat, all)"
        required: true
        default: "sit"
        type: choice
        options:
          - sit
          - qa
          - uat
          - all
      mode:
        description: "Deployment mode"
        required: true
        default: "single"
        type: choice
        options:
          - single
          - partial

jobs:
  set-build-list:
    runs-on: ubuntu-latest
    outputs:
      list: ${{ steps.output-list.outputs.list }}
    steps:
      - id: output-list
        shell: bash
        run: |
          MODE="${{ github.event.inputs.mode }}"
          ENV="${{ github.event.inputs.environment }}"
          ORDER=("sit" "qa" "uat")
          BUILD_LIST=()
          if [ "$MODE" = "single" ]; then
            BUILD_LIST=("$ENV")
          elif [ "$MODE" = "partial" ]; then
            for e in "${ORDER[@]}"; do
              BUILD_LIST+=("$e")
              [ "$e" = "$ENV" ] && break
            done
          else
            BUILD_LIST=("${ORDER[@]}")
          fi
          echo "Environments to deploy: ${BUILD_LIST[@]}"
          echo "list=${BUILD_LIST[*]}" >> $GITHUB_OUTPUT
  resolve-run-id:
    runs-on: ubuntu-latest
    needs: set-build-list
    outputs:
      run_id: ${{ steps.get-run-id.outputs.run_id }}
    steps:
      - name: Get workflow run ID from build number
        id: get-run-id
        shell: bash
        run: |
          REPO="${GITHUB_REPOSITORY}"
          WORKFLOW_FILE="build.yml"  # replace with your build workflow file name
          BUILD_NUMBER="${{ github.event.inputs.build_number }}"

          echo "Looking for workflow run with run_number=$BUILD_NUMBER..."
          
          RUN_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$REPO/actions/workflows/$WORKFLOW_FILE/runs?per_page=100" \
            | jq -r ".workflow_runs[] | select(.run_number==$BUILD_NUMBER) | .id")
          
          if [ -z "$RUN_ID" ]; then
            echo "❌ No workflow run found for build number $BUILD_NUMBER"
            exit 1
          fi
          
          echo "Found workflow run ID: $RUN_ID"
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT    

  deploy-sit:
    runs-on: windows-latest
    needs: [set-build-list,resolve-run-id] 
    
    if: ${{ contains(needs.set-build-list.outputs.list, 'sit') }}
    steps:
      - name: Download SIT artifact
        uses: actions/download-artifact@v4
        with:
          name: app-sit
          path: ./publish-sit
          run-id: ${{ needs.resolve-run-id.outputs.run_id }}
          # FIX: Provide PAT for cross-workflow access
          github-token: ${{ secrets.ACTIONS_READ_PAT }}
          # Optional but helpful for clarity
          repository: ${{ github.repository }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to SIT
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'aviapp-sit'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_SIT }}
          package: ./publish-sit

  deploy-qa:
    runs-on: windows-latest
    needs: deploy-sit
    if: |
      always() &&
      contains(needs.set-build-list.outputs.list, 'qa') &&
      (
        !contains(needs.set-build-list.outputs.list, 'sit') || 
        (contains(needs.set-build-list.outputs.list, 'sit') && needs.deploy-sit.result == 'success')
      )
    steps:
      - name: Download QA artifact
        uses: actions/download-artifact@v4
        with:
          name: app-qa
          path: ./publish-qa
          run-id: ${{ needs.resolve-run-id.outputs.run_id }}
          # FIX: Provide PAT for cross-workflow access
          github-token: ${{ secrets.ACTIONS_READ_PAT }}
          # Optional but helpful for clarity
          repository: ${{ github.repository }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to QA
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'aviapp-qa'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_QA }}
          package: ./publish-qa

  deploy-uat:
    runs-on: windows-latest
    needs: deploy-qa
    if: |
      always() &&
      contains(needs.set-build-list.outputs.list, 'uat') &&
      (
        !contains(needs.set-build-list.outputs.list, 'qa') || 
        (contains(needs.set-build-list.outputs.list, 'qa') && needs.deploy-qa.result == 'success')
      )
    steps:
      - name: Download UAT artifact
        uses: actions/download-artifact@v4
        with:
          name: app-uat
          path: ./publish-uat
          run-id: ${{ needs.resolve-run-id.outputs.run_id }}
          # FIX: Provide PAT for cross-workflow access
          github-token: ${{ secrets.ACTIONS_READ_PAT }}
          # Optional but helpful for clarity
          repository: ${{ github.repository }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to UAT
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'aviapp-uat'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_UAT }}
          package: ./publish-uat
  
