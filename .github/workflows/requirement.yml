name: Build and deploy ASP.Net Core + Angular app to Azure Web App - dating-app-course

on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose environment to run (sit, qa, uat, all)'
        required: true
        default: 'all'
        type: choice
        options:
          - sit
          - qa
          - uat
          - all
      mode:
        description: 'Choose run mode'
        required: true
        default: 'partial'
        type: choice
        options:
          - partial
          - single

jobs:
  # =========================
  # Build Job
  # =========================
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Angular CLI
        run: npm install -g @angular/cli@20

      - name: Build Angular frontend
        run: |
          cd client
          npm install
          ng build --configuration ${{ github.event.inputs.environment || 'production' }}

      - name: Publish API project
        run: dotnet publish API/API.csproj -c ${{ github.event.inputs.environment || 'Release' }} -o ./publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ./publish

# =========================
# Deploy SIT
# =========================
  deploy-sit:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Pre-check SIT deployment
        id: precheck-sit
        run: |
          EVENT="${{ github.event_name }}"
          ENV="${{ github.event.inputs.environment }}"
          MODE="${{ github.event.inputs.mode }}"
          STAGE="sit"

          declare -A order=( ["sit"]=1 ["qa"]=2 ["uat"]=3 )

          # Push → always deploy
          if [ "$EVENT" = "push" ]; then exit 0; fi

          # All → always deploy
          if [ "$ENV" = "all" ]; then exit 0; fi

          # Single → deploy only if stage matches ENV
          if [ "$MODE" = "single" ] && [ "$STAGE" != "$ENV" ]; then
            echo "Skipping SIT (single mode)"
            exit 78
          fi

          # Partial → deploy if stage order <= ENV order
          if [ "$MODE" = "partial" ] && [ ${order[$STAGE]} -gt ${order[$ENV]} ]; then
            echo "Skipping SIT (partial mode)"
            exit 78
          fi

      - name: Deploy to SIT
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'aviapp-sit'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_SIT }}
          package: .
        env:
          ASPNETCORE_ENVIRONMENT: SIT

# =========================
# Deploy QA
# =========================
  deploy-qa:
    runs-on: windows-latest
    needs: deploy-sit
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Pre-check QA deployment
        id: precheck-qa
        run: |
          EVENT="${{ github.event_name }}"
          ENV="${{ github.event.inputs.environment }}"
          MODE="${{ github.event.inputs.mode }}"
          STAGE="qa"

          declare -A order=( ["sit"]=1 ["qa"]=2 ["uat"]=3 )

          if [ "$EVENT" = "push" ] || [ "$ENV" = "all" ]; then exit 0; fi

          if [ "$MODE" = "single" ] && [ "$STAGE" != "$ENV" ]; then
            echo "Skipping QA (single mode)"
            exit 78
          fi

          if [ "$MODE" = "partial" ] && [ ${order[$STAGE]} -gt ${order[$ENV]} ]; then
            echo "Skipping QA (partial mode)"
            exit 78
          fi

      - name: Deploy to QA
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'aviapp-qa'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_QA }}
          package: .
        env:
          ASPNETCORE_ENVIRONMENT: QA

# =========================
# Deploy UAT
# =========================
  deploy-uat:
    runs-on: windows-latest
    needs: deploy-qa
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Pre-check UAT deployment
        id: precheck-uat
        run: |
          EVENT="${{ github.event_name }}"
          ENV="${{ github.event.inputs.environment }}"
          MODE="${{ github.event.inputs.mode }}"
          STAGE="uat"

          declare -A order=( ["sit"]=1 ["qa"]=2 ["uat"]=3 )

          if [ "$EVENT" = "push" ] || [ "$ENV" = "all" ]; then exit 0; fi

          if [ "$MODE" = "single" ] && [ "$STAGE" != "$ENV" ]; then
            echo "Skipping UAT (single mode)"
            exit 78
          fi

          if [ "$MODE" = "partial" ] && [ ${order[$STAGE]} -gt ${order[$ENV]} ]; then
            echo "Skipping UAT (partial mode)"
            exit 78
          fi

      - name: Deploy to UAT
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'aviapp-uat'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_UAT }}
          package: .
        env:
          ASPNETCORE_ENVIRONMENT: UAT
